# Class Request Tool rake tasks
namespace :crt do
  namespace :images do

    desc "Rebuild uploaded image versions"
    task :rebuild => :environment do
          
      # Now rebuild existing images
      AttachedImage.all.each do |image_obj|
        next if /default_image/ =~ image_obj.image.to_s
        if image_obj.image.nil?
          puts "Missing file for image #{image_obj.image_url}"
        else
          puts "Rebuilding #{image_obj.image_url}"
          image_obj.image.recreate_versions!
          image_obj.save!
        end
      end
    end
  end
  
  namespace :cron_task do
    desc "Send email to admins when a class is still homeless after two days."
    task :send_homeless_notices => :environment do
      Notification.homeless_courses_reminder.deliver_later(:queue => 'notifications')
    end

    desc "Set up crontab"
    task :setup_crontab do
      tmp = Tempfile.new('crontab')
      tmp.write `crontab -l`.sub(/^[^\n#]*#CRT_AUTO_CRON_BEGIN.*#CRT_AUTO_CRON_END\n?/m, '')
      tmp.write "#CRT_AUTO_CRON_BEGIN\n"
      tmp.write "# Modified as of #{Time.now}\n"
      tmp.write "# This block is generated by CRT as part of deploy.\n"
      tmp.write "# Please update timestamp if you make manual alterations.\n"

      daily = "1 12 * * *"
      env = "RAILS_ENV=#{ENV['RAILS_ENV']}"
      cmd = "cd #{ENV['RAKE_ROOT'] || Rails.root} && #{env} #{`which rvm`.chomp} default do bundle exec #{`which rake`.chomp} crt:cron_task:send_homeless_notices"
      redirect = '> /dev/null 2>&1'

      tmp.write "#{daily} #{cmd} #{redirect}\n"

      tmp.write "#CRT_AUTO_CRON_END\n"
      tmp.close
      success = system 'crontab', tmp.path
      puts 'Crontab added' if success
    end
  end
  
  namespace :assessment_tests do
    desc "Generate test assessments"
    task :generate, [:number] => :environment do |t, args|
      n = (args.blank? || args[:number].blank?) ? 10 : args[:number]
      (1..n).each do |i|
        Assessment.create(
          :course_id => -1,
          :staff_experience => Assessment::RATINGS.values.sample,
          :staff_availability => Assessment::RATINGS.values.sample,
          :space => Assessment::RATINGS.values.sample,
          :request_course => Assessment::RATINGS.values.sample,
          :request_materials => Assessment::RATINGS.values.sample,
          :catalogs => Assessment::RATINGS.values.sample,
          :digital_collections => Assessment::RATINGS.values.sample,
          :involve_again => Assessment::RATINGS.values.sample,
      
          # Text fields
          :not_involve_again => "This was not fun",
          :better_future => "Make it more fun",
          :using_materials => "All the stuff that was shown was really cool",
          :involvement => "Some random comment about the repository",
          :comments => "Great experience"
        )
      end
      puts "#{n} test assessments created"
    end
    
    desc "Remove all test assessments"
    task :clean => :environment do
      Assessment.where('course_id < 0').destroy_all
      puts "Test assessments deleted"
    end
  end
end

# Custom seed files (custom_seeds directory)  
namespace :db do
  desc 'A custom seed of the database for QA testing'
  task :custom_seed do
    Dir[File.join(Rails.root, 'db', 'custom_seeds', '*.rb')].each do |filename|
      load(filename) if File.exist?(filename)
    end
  end
end      
